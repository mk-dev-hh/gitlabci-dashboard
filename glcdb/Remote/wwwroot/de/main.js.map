{"version":3,"sources":["de.js","$_lazy_route_resource lazy namespace object","src/app/app/app.module.ts","src/app/app/app.routing.ts","src/app/app/classes/HttpInterceptors/CacheInterceptor.ts","src/app/app/classes/HttpInterceptors/ErrorInterceptor.ts","src/app/app/components/app.component.ts","src/app/app/components/error404.component.ts","src/app/dashboard/components/dashboard-branches-headers/dashboard-branches-headers.component.ts","src/app/dashboard/components/dashboard-branches-headers/dashboard-branches-headers.component.html","src/app/dashboard/components/dashboard-overview-item/dashboard-overview-item.component.ts","src/app/dashboard/components/dashboard-overview-item/dashboard-overview-item.component.html","src/app/dashboard/components/dashboard-overview-line/dashboard-overview-line.component.ts","src/app/dashboard/components/dashboard-overview-line/dashboard-overview-line.component.html","src/app/dashboard/components/dashboard-overview-list/dashboard-overview-list.component.ts","src/app/dashboard/components/dashboard-overview-list/dashboard-overview-list.component.html","src/app/dashboard/components/dashboard-overview-page/dashboard-overview-page.component.ts","src/app/dashboard/components/dashboard-overview-page/dashboard-overview-page.component.html","src/app/dashboard/dashboard.module.ts","src/app/dashboard/dashboard.routing.ts","src/app/frame/components/section-item/section-item.component.ts","src/app/frame/components/section-item/section-item.component.html","src/app/frame/components/sections/sections.component.ts","src/app/frame/components/sections/sections.component.html","src/app/frame/components/sidebar-navigation/sidebar-navigation.component.ts","src/app/frame/components/sidebar-navigation/sidebar-navigation.component.html","src/app/frame/frame.module.ts","src/app/pipelines/components/pipeline-list-item/pipeline-list-item.component.ts","src/app/pipelines/components/pipeline-list-item/pipeline-list-item.component.html","src/app/pipelines/components/pipeline-list/pipeline-list.component.ts","src/app/pipelines/components/pipeline-list/pipeline-list.component.html","src/app/pipelines/components/pipelines-filter/pipelines-filter.component.ts","src/app/pipelines/components/pipelines-filter/pipelines-filter.component.html","src/app/pipelines/components/pipelines-header/pipelines-header.component.ts","src/app/pipelines/components/pipelines-header/pipelines-header.component.html","src/app/pipelines/components/pipelines-view/pipelines-view.component.ts","src/app/pipelines/components/pipelines-view/pipelines-view.component.html","src/app/pipelines/pipelines.module.ts","src/app/pipelines/pipelines.routing.ts","src/app/services/branches/branches.service.ts","src/app/services/configuration/configuration.service.ts","src/app/services/error/error.service.ts","src/app/services/pipelineSchedules/pipelineSchedules.service.ts","src/app/services/pipelines/pipeline.dto.ts","src/app/services/pipelines/pipelines.service.ts","src/app/services/projects/project.service.ts","src/app/services/resource-string/resource-string.service.ts","src/app/settings/settings-dashboard-page/settings-dashboard-page.component.ts","src/app/settings/settings-dashboard-page/settings-dashboard-page.component.html","src/app/settings/settings-overview-page/settings-overview-page.component.ts","src/app/settings/settings-overview-page/settings-overview-page.component.html","src/app/settings/settings.module.ts","src/app/settings/settings.routing.ts","src/app/shared/classes/loading-state.ts","src/app/shared/components/loading-screen.component.ts","src/app/shared/components/localize.component.ts","src/app/shared/components/msg-dialog.component.ts","src/app/shared/components/progress-indicator/progress-indicator.component.ts","src/app/shared/material.module.ts","src/app/shared/shared.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};var u=undefined;function plural(n){var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"de\"]=[\"de\",[[\"AM\",\"PM\"],u,u],u,[[\"S\",\"M\",\"D\",\"M\",\"D\",\"F\",\"S\"],[\"So.\",\"Mo.\",\"Di.\",\"Mi.\",\"Do.\",\"Fr.\",\"Sa.\"],[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],[\"So.\",\"Mo.\",\"Di.\",\"Mi.\",\"Do.\",\"Fr.\",\"Sa.\"]],[[\"S\",\"M\",\"D\",\"M\",\"D\",\"F\",\"S\"],[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],[\"So.\",\"Mo.\",\"Di.\",\"Mi.\",\"Do.\",\"Fr.\",\"Sa.\"]],[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan.\",\"Feb.\",\"M\\xE4rz\",\"Apr.\",\"Mai\",\"Juni\",\"Juli\",\"Aug.\",\"Sept.\",\"Okt.\",\"Nov.\",\"Dez.\"],[\"Januar\",\"Februar\",\"M\\xE4rz\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"]],[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"M\\xE4r\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],[\"Januar\",\"Februar\",\"M\\xE4rz\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"]],[[\"v. Chr.\",\"n. Chr.\"],u,u],1,[6,0],[\"dd.MM.yy\",\"dd.MM.y\",\"d. MMMM y\",\"EEEE, d. MMMM y\"],[\"HH:mm\",\"HH:mm:ss\",\"HH:mm:ss z\",\"HH:mm:ss zzzz\"],[\"{1}, {0}\",u,\"{1} 'um' {0}\",u],[\",\",\".\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xB7\",\"\\u2030\",\"\\u221E\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0\\xA0%\",\"#,##0.00\\xA0\\xA4\",\"#E0\"],\"EUR\",\"\\u20AC\",\"Euro\",{\"ATS\":[\"\\xF6S\"],\"AUD\":[\"AU$\",\"$\"],\"BGM\":[\"BGK\"],\"BGO\":[\"BGJ\"],\"CUC\":[u,\"Cub$\"],\"DEM\":[\"DM\"],\"FKP\":[u,\"Fl\\xA3\"],\"GNF\":[u,\"F.G.\"],\"KMF\":[u,\"FC\"],\"RON\":[u,\"L\"],\"RWF\":[u,\"F.Rw\"],\"SYP\":[],\"THB\":[\"\\u0E3F\"],\"TWD\":[\"NT$\"],\"XXX\":[],\"ZMW\":[u,\"K\"]},\"ltr\",plural,[[[\"Mitternacht\",\"morgens\",\"vorm.\",\"mittags\",\"nachm.\",\"abends\",\"nachts\"],u,[\"Mitternacht\",\"morgens\",\"vormittags\",\"mittags\",\"nachmittags\",\"abends\",\"nachts\"]],[[\"Mitternacht\",\"Morgen\",\"Vorm.\",\"Mittag\",\"Nachm.\",\"Abend\",\"Nacht\"],u,[\"Mitternacht\",\"Morgen\",\"Vormittag\",\"Mittag\",\"Nachmittag\",\"Abend\",\"Nacht\"]],[\"00:00\",[\"05:00\",\"10:00\"],[\"10:00\",\"12:00\"],[\"12:00\",\"13:00\"],[\"13:00\",\"18:00\"],[\"18:00\",\"24:00\"],[\"00:00\",\"05:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './components/app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AppRouting } from './app.routing';\r\nimport { Error404Component } from './components/error404.component';\r\nimport { DashboardModule } from '../dashboard/dashboard.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ErrorInterceptor } from './classes/HttpInterceptors/ErrorInterceptor';\r\nimport { CacheInterceptor } from './classes/HttpInterceptors/CacheInterceptor';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport {FrameModule} from '../frame/frame.module';\r\nimport { filter } from 'rxjs/operators';\r\nimport { PipelinesModule } from '../pipelines/pipelines.module';\r\nimport { SettingsModule  } from '../settings/settings.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Error404Component\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    FrameModule,\r\n    AppRouting,\r\n    DashboardModule,\r\n    PipelinesModule,\r\n    SettingsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CacheInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(private route: ActivatedRoute, private titleService: Title, private router: Router) {}\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { Error404Component } from './components/error404.component';\r\nimport { DashboardRoutes } from '../dashboard/dashboard.routing';\r\nimport { PipelinesRoutes } from '../pipelines/pipelines.routing';\r\nimport { SettingsRoutes } from '../settings/settings.routing';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n  {path: 'dashboard', children: DashboardRoutes},\r\n  {path: 'pipelines', children: PipelinesRoutes},\r\n  {path: 'settings', children: SettingsRoutes },\r\n  {path: '**', component: Error404Component}\r\n];\r\n\r\nexport const AppRouting = RouterModule.forRoot(routes);\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  // Wegen Cachingproblemen im IE\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const httpRequest = req.clone({\r\n      setHeaders: {\r\n        CacheCntrol: 'no-cache',\r\n        Pragma: 'no-cache',\r\n        Expires: 'Sat, 01 Jan 2000 00:00:00 GMT'\r\n      }\r\n    });\r\n\r\n    return next.handle(httpRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ErrorService } from '../../../services/error/error.service';\r\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private errorService: ErrorService, ) {\r\n  }\r\n\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n        catchError((err: HttpErrorResponse) => {\r\n          if ([401, 403, 404].includes(err.status)) {\r\n            const error = this.errorService.getErrorForHttpCode(err.status);\r\n            return throwError(error);\r\n          } else if (err.error && err.error.errorCode) {\r\n            const error = this.errorService.getErrorForErrorCode(err.error.errorCode);\r\n            return throwError(error);\r\n          } else {\r\n            const error = this.errorService.getErrorForErrorCode(-1);\r\n            return throwError(error);\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\n\r\n@Component({\r\n  selector: 'dd-root',\r\n  template: `\r\n    <dd-sidebar-navigation style=\"height: 100%;\">\r\n      <mat-card class=\"ie-banner\" *ngIf=\"isIE\">\r\n        <span i18n=\"Banner im Internet Explorer@@rootIeBanner\">Ihr Browser wird nicht unterstützt. Wir können nicht garantieren, dass alle Funktionen einwandfrei funktionieren. Bitte verwenden Sie einen anderen Browser.</span>\r\n      </mat-card>\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </dd-sidebar-navigation>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n    }\r\n\r\n    .ie-banner {\r\n      margin: 0.5em;\r\n      padding: 1em 1em;\r\n      background-color: hsl(340, 100%, 45%);\r\n      color: hsl(0, 0%, 100%);\r\n      text-align: center;\r\n    }\r\n\r\n      .content {\r\n        height: 100%;\r\n        overflow-y: auto;\r\n      }\r\n  `]\r\n})\r\nexport class AppComponent {\r\n\r\n  public isIE = false;\r\n\r\n  constructor(private platform: Platform) {\r\n    this.isIE = platform.TRIDENT;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'dd-error404',\r\n  template: `\r\n    <iframe [src]=\"iFramePath\"></iframe>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n      height: 100%;\r\n    }\r\n\r\n    iframe {\r\n      width: 100%;\r\n      height: 99%;\r\n      border: none;\r\n    }\r\n  `]\r\n})\r\nexport class Error404Component implements OnInit {\r\n  public iFramePath: any;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.iFramePath = this.sanitizer.bypassSecurityTrustResourceUrl(`/${window['APP_NAME']}/error/statuscode/404`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-dashboard-branches-headers',\n  templateUrl: './dashboard-branches-headers.component.html',\n  styleUrls: ['./dashboard-branches-headers.component.scss']\n})\nexport class DashboardBranchesHeadersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"headersContainer\">\r\n  <h2>Master Monitoring</h2>\r\n  <h2>Nightly DEV</h2>\r\n  <h2>Nightly QA</h2>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Pipeline } from '../../../services/pipelines/pipeline.dto';\r\n\r\n@Component({\r\n  selector: 'dd-dashboard-overview-item',\r\n  templateUrl: './dashboard-overview-item.component.html',\r\n  styleUrls: ['./dashboard-overview-item.component.scss']\r\n})\r\nexport class DashboardOverviewItemComponent implements OnInit {\r\n\r\n  @Input() pipeline: Pipeline;\r\n  projectId: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.projectId = this.pipeline.projectId;\r\n  }\r\n\r\n  setClasses(){\r\n    let classes = {\r\n      'failed': this.pipeline.status === 'failed',\r\n      'success': this.pipeline.status === 'success',\r\n      'other': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success'\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  setClassesBorder(){\r\n    let classes = {\r\n      'failedBorder': this.pipeline.status === 'failed',\r\n      'successBorder': this.pipeline.status === 'success',\r\n      'otherBorder': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success'\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  setContainerColor(){\r\n    let classes = {\r\n      'runningContainer': this.pipeline.status === 'running',\r\n      'failedContainer': this.pipeline.status === 'failed',\r\n      'manualContainer': this.pipeline.status ==='manual',\r\n      'successContainer': this.pipeline.status === 'success',\r\n      'unknownContainer': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success' && this.pipeline.status !== 'manual' && this.pipeline.status !== 'running' && this.pipeline.status !== 'bamboo build' && !this.pipeline.status.includes(\"no schedules\"),\r\n      'notVisible': this.pipeline.status.includes(\"no qa\") || this.pipeline.status.includes(\"no develop\")\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  setButtonColor(){\r\n    let classes = {\r\n      'runningButton': this.pipeline.status === 'running',\r\n      'failedButton': this.pipeline.status === 'failed',\r\n      'manualButton': this.pipeline.status === 'manual',\r\n      'successButton': this.pipeline.status === 'success',\r\n      //'unknownButton': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success' && this.pipeline.status !== 'manual' && this.pipeline.status !== 'running'\r\n      'unknownButton': this.pipeline.status === \"canceled\" || this.pipeline.status == \"blocked\"\r\n    }\r\n    return classes;\r\n  }\r\n\r\n}\r\n","<mat-card class=\"cardItem\" [ngClass]='setContainerColor()' >\r\n  <mat-card-header>\r\n    <mat-card-title>{{pipeline.projectName}}</mat-card-title>\r\n    <mat-card-subtitle>{{pipeline.category}}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div  *ngIf=\"pipeline.category != 'bamboo build' && !pipeline.status.includes('no qa') && !pipeline.status.includes('no develop'); else elseBlock\">\r\n      <!--<p>Status: {{pipeline.status}}</p>-->\r\n      <!--<p>Branch: {{pipeline.ref}}</p>-->\r\n      <!--<p>Created at: {{pipeline.createdAt.split('.')[0].split('T')[0].split('-').reverse().join('.') + ' ' + pipeline.createdAt.split('.')[0].split('T')[1]}}</p>-->\r\n      <!--<p>Created at:{{pipeline.createdAt | date:'medium'}}</p>-->\r\n      <p *ngIf=\"pipeline.updatedAt != null && pipeline.updatedAt != undefined && pipeline.updatedAt != ''\">Abgeschlossen am: {{pipeline.updatedAt | date:'medium'}}</p>\r\n      <!--<p>Finished at:{{pipeline.finishedAt | date:'medium'}}</p>-->\r\n      <!--<p>Updated at: {{pipeline.updatedAt.split('.')[0].split('T')[0].split('-').reverse().join('.') + ' ' + pipeline.updatedAt.split('.')[0].split('T')[1]}}</p>-->\r\n    </div>\r\n\r\n    <ng-template #elseBlock><div>\r\n      <p>Status: {{pipeline.status}}</p>\r\n    </div></ng-template>\r\n  </mat-card-content>\r\n  <mat-card-actions *ngIf=\"pipeline.ref != null && pipeline.ref != undefined && pipeline.ref != ''\">\r\n    <a mat-raised-button [ngClass]='setButtonColor()' href=\"{{pipeline.webUrl}}\">GitLab</a>\r\n    <button mat-raised-button [ngClass]='setButtonColor()' [routerLink]=\"['/pipelines/' + projectId + '/' + pipeline.ref.toLowerCase()]\">Pipelines</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Project } from '../../../services/projects/project.dto';\r\nimport { Pipeline } from '../../../services/pipelines/pipeline.dto';\r\nimport { PipelineSchedulesService } from '../../../services/pipelineSchedules/pipelineSchedules.service';\r\nimport { LoadingState } from 'src/app/shared/classes/loading-state';\r\nimport { NotificationMsg } from '../../../services/notification/msg.dto';\r\n\r\n@Component({\r\n  selector: 'dd-dashboard-overview-line',\r\n  templateUrl: './dashboard-overview-line.component.html',\r\n  styleUrls: ['./dashboard-overview-line.component.scss']\r\n})\r\nexport class DashboardOverviewLineComponent implements OnInit {\r\n  @Input() project: Project;\r\n  pipelines: Pipeline[];\r\n  public LoadingState = LoadingState;\r\n  public loadingState = LoadingState.Loading;\r\n  public loadingError: NotificationMsg;\r\n\r\n  constructor(private pipelineSchedulesService: PipelineSchedulesService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.project != null) {\r\n      this.pipelineSchedulesService.getPipelineSchedules(this.project.id).subscribe(pipelineSchedules =>{\r\n        this.pipelines = new Array();\r\n        if(pipelineSchedules != undefined && pipelineSchedules.length != 0){\r\n          pipelineSchedules.forEach(element =>{\r\n            let pipelineFromSchedule: Pipeline = new Pipeline();\r\n            pipelineFromSchedule = element.lastPipeline;\r\n            pipelineFromSchedule.category = element.description;\r\n            pipelineFromSchedule.projectId = this.project.id;\r\n            pipelineFromSchedule.projectName = this.project.name;\r\n            this.pipelines.push(pipelineFromSchedule);\r\n            this.pipelines = this.pipelines.sort((a, b) => {\r\n              return a.category.localeCompare(b.category);\r\n            });\r\n            this.pipelines = this.pipelines.sort((a, b) => {\r\n              return a.projectName.localeCompare(b.projectName);\r\n            });\r\n          });\r\n        }\r\n        else{\r\n          let unknownPipeline = new Pipeline();\r\n          unknownPipeline.projectId = this.project.id;\r\n          unknownPipeline.category = \"no schedules available\";\r\n          unknownPipeline.status = \"no schedules available\";\r\n          unknownPipeline.projectName = this.project.name;\r\n          unknownPipeline.id = 0;\r\n          this.pipelines.push(unknownPipeline);\r\n        }\r\n        this.pipelines = this.pipelines.sort((a, b) => {\r\n          return a.category.localeCompare(b.category);\r\n        });\r\n        this.pipelines = this.pipelines.sort((a, b) => {\r\n          return a.projectName.localeCompare(b.projectName);\r\n        });\r\n        this.loadingState = LoadingState.Finished;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/*this.pipelinesService.getPipelinesByBranch(project.id, \"master\").subscribe(pipelines => {\r\n  if(pipelines != undefined && pipelines.length != 0) {\r\n    this.pipelinesService.getPipeline(project.id, pipelines[0].id.toString()).subscribe(pipeline => {\r\n      pipelines[0] = pipeline;\r\n      pipelines[0].projectName = project.name;\r\n      pipelines[0].projectId = project.id;\r\n      pipelines[0].category = \"master\";\r\n      this.pipelines.push(pipelines[0]);\r\n    });\r\n  }\r\n});\r\nthis.pipelinesService.getPipelinesByBranch(project.id, \"develop\").subscribe(pipelines => {\r\n  if(pipelines != undefined && pipelines.length != 0) {\r\n    this.pipelinesService.getPipeline(project.id, pipelines[0].id.toString()).subscribe(pipeline => {\r\n      pipelines[0] = pipeline;\r\n      pipelines[0].projectName = project.name;\r\n      pipelines[0].projectId = project.id;\r\n      pipelines[0].category = \"develop\"\r\n      this.pipelines.push(pipelines[0]);\r\n    });\r\n  }\r\n  else{\r\n    let unknownPipeline = new Pipeline();\r\n    unknownPipeline.projectId = project.id;\r\n    unknownPipeline.category = \"no develop\";\r\n    unknownPipeline.status = \"no develop branch for this project\";\r\n    unknownPipeline.projectName = project.name;\r\n    unknownPipeline.id = 0;\r\n    this.pipelines.push(unknownPipeline);\r\n  }\r\n});\r\nthis.pipelinesService.getPipelinesByBranch(project.id, \"qa\").subscribe(pipelines => {\r\n  if(pipelines != undefined && pipelines.length != 0){\r\n    this.pipelinesService.getPipeline(project.id, pipelines[0].id.toString()).subscribe(pipeline => {\r\n      pipelines[0] = pipeline;\r\n      pipelines[0].projectName = project.name;\r\n      pipelines[0].category = \"qa\"\r\n      pipelines[0].projectId = project.id;\r\n      this.pipelines.push(pipelines[0]);\r\n    });\r\n  }\r\n  else{\r\n    let unknownPipeline = new Pipeline();\r\n    unknownPipeline.projectId = project.id;\r\n    unknownPipeline.category = \"no qa\";\r\n    unknownPipeline.status = \"no qa branch for this project\";\r\n    unknownPipeline.projectName = project.name;\r\n    unknownPipeline.id = 0;\r\n    this.pipelines.push(unknownPipeline);\r\n  }\r\n});*/\r\n","<ng-container [ngSwitch]=\"loadingState\">\r\n  <div *ngSwitchCase=\"LoadingState.Finished\" class=\"lineContainer\">\r\n    <dd-dashboard-overview-item *ngFor=\"let pipeline of pipelines\" [pipeline]=\"pipeline\" class=\"projectListItem\" ></dd-dashboard-overview-item>\r\n  </div>\r\n\r\n  <dd-progress-indicator *ngSwitchCase=\"LoadingState.Loading\" [restrictedWidth]=\"true\" text=\"{{project.name}} wird geladen\"  class=\"center-content\" i18n-text=\"Ladebalkentext@@activitiesViewerLoading\"></dd-progress-indicator>\r\n\r\n  <div *ngSwitchCase=\"LoadingState.Error\" class=\"center-content  center-content__childs\">\r\n    <p class=\"mat-title\">{{loadingError.title}}</p>\r\n    <p class=\"mat-subheading-2\">{{loadingError.details}}</p>\r\n  </div>\r\n\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from '../../../services/projects/project.service';\r\nimport { Project } from '../../../services/projects/project.dto';\r\n\r\n@Component({\r\n  selector: 'dd-dashboard-overview-list',\r\n  templateUrl: './dashboard-overview-list.component.html',\r\n  styleUrls: ['./dashboard-overview-list.component.scss']\r\n})\r\n\r\nexport class DashboardOverviewListComponent implements OnInit {\r\n  projects: Project[];\r\n\r\n  constructor(private projectService: ProjectService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.projectService);\r\n    this.projectService.getDashboardConfiguredProjects().subscribe( projects => {\r\n    console.log(projects);\r\n    this.projects = new Array();\r\n    this.projects = projects.sort((a, b) => {\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n  });\r\n  }\r\n}\r\n","\r\n<dd-dashboard-overview-line *ngFor=\"let project of projects\" [project]=\"project\" class=\"projectLine\" ></dd-dashboard-overview-line>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dd-dashboard-overview-page',\r\n  templateUrl: './dashboard-overview-page.component.html',\r\n  styleUrls: ['./dashboard-overview-page.component.scss']\r\n})\r\nexport class DashboardOverviewPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Dashboard</h1>\r\n<dd-dashboard-branches-headers></dd-dashboard-branches-headers>\r\n<dd-dashboard-overview-list id=\"projectsList\"></dd-dashboard-overview-list>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MaterialModule} from '../shared/material.module';\r\nimport { DashboardOverviewListComponent } from './components/dashboard-overview-list/dashboard-overview-list.component';\r\nimport { DashboardOverviewItemComponent } from './components/dashboard-overview-item/dashboard-overview-item.component';\r\nimport { DashboardOverviewPageComponent } from './components/dashboard-overview-page/dashboard-overview-page.component';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { DashboardBranchesHeadersComponent } from './components/dashboard-branches-headers/dashboard-branches-headers.component';\r\nimport { DashboardOverviewLineComponent } from './components/dashboard-overview-line/dashboard-overview-line.component';\r\nimport {SharedModule} from \"../shared/shared.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardOverviewItemComponent, DashboardOverviewListComponent, DashboardOverviewPageComponent, DashboardBranchesHeadersComponent, DashboardOverviewLineComponent],\r\n  exports:[\r\n      DashboardOverviewPageComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        RouterModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class DashboardModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardOverviewListComponent } from './components/dashboard-overview-list/dashboard-overview-list.component';\r\nimport { DashboardOverviewPageComponent } from './components/dashboard-overview-page/dashboard-overview-page.component';\r\n\r\n\r\nexport const DashboardRoutes: Routes = [\r\n  {path: '', component: DashboardOverviewPageComponent}\r\n];\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dd-section-item',\r\n  templateUrl: './section-item.component.html',\r\n  styleUrls: ['./section-item.component.scss']\r\n})\r\nexport class SectionItemComponent implements OnInit {\r\n\r\n  @Input() section: string;\r\n  @Input() icon: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<button mat-button class=\"selectionItem\" [routerLink]=\"['/', section.toLowerCase()]\"><mat-icon aria-hidden=\"true\" aria-label=\"Example icon\">{{icon}}</mat-icon>{{section}}</button>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dd-sections',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.scss']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n\r\n  sections: string[];\r\n  icons: string[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.sections = new Array();\r\n    this.sections.push('Dashboard', 'Pipelines', 'Settings');// 'Saved', 'Issues');\r\n    this.icons = new Array();\r\n    this.icons.push('home', 'graphic_eq', 'settings');// 'bookmark', 'outlet');\r\n  }\r\n\r\n}\r\n","<dd-section-item\r\n  *ngFor=\"let section of sections\"\r\n  [section]=\"section\"\r\n  [icon]=\"icons[sections.indexOf(section)]\"\r\n>\r\n\r\n</dd-section-item>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'dd-sidebar-navigation',\r\n  templateUrl: './sidebar-navigation.component.html',\r\n  styleUrls: ['./sidebar-navigation.component.scss']\r\n})\r\nexport class SidebarNavigationComponent implements OnInit, OnDestroy {\r\n\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private media: MediaMatcher) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mobileQuery = this.media.matchMedia('(max-width: 975px)');\r\n    this._mobileQueryListener = () => this.changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addEventListener('change', this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeEventListener('change', this._mobileQueryListener);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <svg width=\"64\" height=\"64\">\r\n    <polygon points=\"0,0 32,0 0,32\" />\r\n  </svg>\r\n\r\n  <div id=\"toolbarContent\">\r\n    <span><button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        onclick=\"this.blur()\"\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"mobileQuery.matches\">\r\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n    </button>\r\n    Gitlab CI Dashboard</span>\r\n  </div>\r\n  <svg id=\"svgTwo\" width=\"64\" height=\"64\">\r\n    <polygon points=\"64,64 32,64 64,32\" />\r\n  </svg>\r\n\r\n</mat-toolbar>\r\n<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n               [attr.role]=\"'navigation'\"\r\n               [mode]=\"mobileQuery.matches ? 'push' : 'side'\"\r\n               [opened]=\"mobileQuery.matches === false\">\r\n    <mat-nav-list>\r\n      <dd-sections id=\"selections\"></dd-sections>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <ng-content ></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport { SectionsComponent } from './components/sections/sections.component';\r\nimport { SectionItemComponent } from './components/section-item/section-item.component';\r\nimport {RouterModule} from \"@angular/router\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [SidebarNavigationComponent, SectionsComponent, SectionItemComponent],\r\n  exports: [\r\n    SidebarNavigationComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialModule,\r\n        RouterModule\r\n    ]\r\n})\r\nexport class FrameModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Pipeline, PipelineTriggerUserInfo } from '../../../services/pipelines/pipeline.dto';\r\nimport { PipelinesService } from '../../../services/pipelines/pipelines.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'dd-pipeline-list-item',\r\n  templateUrl: './pipeline-list-item.component.html',\r\n  styleUrls: ['./pipeline-list-item.component.scss']\r\n})\r\nexport class PipelineListItemComponent implements OnInit {\r\n\r\n  @Input() pipeline: Pipeline;\r\n  @Input() projectId: string;\r\n  private pipelineTriggerUserInfo: PipelineTriggerUserInfo;\r\n  name: string;\r\n  duration: string;\r\n  date: string;\r\n  columnValues: string[];\r\n  photo: string;\r\n\r\n  constructor(private pipelineService: PipelinesService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pipelineService.getPipelineTriggerUserInfo(this.projectId, this.pipeline.id).subscribe(pipelineTriggerUserInfo => {;\r\n      this.pipelineTriggerUserInfo = pipelineTriggerUserInfo;\r\n      this.name = this.pipelineTriggerUserInfo.user.name;\r\n      this.photo = this.pipelineTriggerUserInfo.user.avatarUrl;\r\n      //this.date = this.pipelineTriggerUserInfo.startedAt.split('T')[0].split('-').reverse().join('.');\r\n      this.date = this.datePipe.transform(this.pipelineTriggerUserInfo.startedAt , 'medium');\r\n      let minutes:number = (this.pipelineTriggerUserInfo.duration - ( this.pipelineTriggerUserInfo.duration % 60 ))/ 60;\r\n      let seconds = this.pipelineTriggerUserInfo.duration % 60;\r\n      this.duration = minutes + ' Min. ' + seconds + ' Sec.';\r\n      this.columnValues = new Array();\r\n      this.columnValues.push(this.pipeline.id.toString(), this.pipeline.status, this.name, this.date, this.duration);\r\n    });\r\n  }\r\n\r\n  setContainerColor(){\r\n    let classes = {\r\n      'runningContainer': this.pipeline.status === 'running',\r\n      'failedContainer': this.pipeline.status === 'failed',\r\n      'manualContainer': this.pipeline.status ==='manual',\r\n      'successContainer': this.pipeline.status === 'success',\r\n      'unknownContainer': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success' && this.pipeline.status !== 'manual' && this.pipeline.status !== 'running'\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  setButtonColor(){\r\n    let classes = {\r\n      'runningButton': this.pipeline.status === 'running',\r\n      'failedButton': this.pipeline.status === 'failed',\r\n      'manualButton': this.pipeline.status === 'manual',\r\n      'successButton': this.pipeline.status === 'success',\r\n     //'unknownButton': this.pipeline.status !== 'failed' && this.pipeline.status !== 'success' && this.pipeline.status !== 'manual' && this.pipeline.status !== 'running'\r\n      'unknownButton': this.pipeline.status === \"canceled\" || this.pipeline.status == \"blocked\"\r\n    }\r\n    return classes;\r\n  }\r\n\r\n}\r\n","<div id=\"pipelineListItemContainer\" [ngClass]='setContainerColor()'>\r\n  <span *ngFor=\"let columnValue of columnValues\" class=\"pipelineListItem\">\r\n    <div *ngIf=\"columnValues.indexOf(columnValue) === 2\"  id=\"imgContainer\"><img src=\"{{photo}}\" width=\"38px\"/></div> {{columnValue}}\r\n  </span>\r\n  <button mat-button [ngClass]='setButtonColor()'>VIEW</button>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CommitsService } from '../../../services/commits/commits.service';\r\nimport { PipelinesService } from '../../../services/pipelines/pipelines.service';\r\nimport { Pipeline } from '../../../services/pipelines/pipeline.dto';\r\n\r\n@Component({\r\n  selector: 'dd-pipeline-list',\r\n  templateUrl: './pipeline-list.component.html',\r\n  styleUrls: ['./pipeline-list.component.scss']\r\n})\r\nexport class PipelineListComponent implements OnInit {\r\n  pipelines: Pipeline[];\r\n  branchName: string;\r\n  projectId: string;\r\n  columns: string[] = ['Pipeline ID', 'Status', 'Started by', 'Created At', 'Total Time'];\r\n\r\n  constructor(private pipelineService: PipelinesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pipelines = new Array();\r\n  }\r\n\r\n  updateProjectId(projectId: string){\r\n    this.projectId = projectId;\r\n  }\r\n\r\n  listBranchPipelines(branchName: string){\r\n    this.branchName = branchName;\r\n    this.pipelineService.getPipelinesByBranch(this.projectId, this.branchName).subscribe(pipelines => {\r\n      this.pipelines = pipelines;\r\n    });\r\n  }\r\n\r\n}\r\n","<dd-pipelines-filter\r\n  (listBranchPipelines)='listBranchPipelines($event)'\r\n  (updateProjectId)='updateProjectId($event)'\r\n>\r\n\r\n</dd-pipelines-filter>\r\n\r\n<div id=\"columnContainer\">\r\n  <span *ngFor='let column of columns' class='columnItem' >{{column}}</span>\r\n</div>\r\n\r\n<dd-pipeline-list-item\r\n  *ngFor='let pipeline of pipelines'\r\n  [pipeline]='pipeline'\r\n  [projectId]='projectId'\r\n>\r\n</dd-pipeline-list-item>\r\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport { Branch } from '../../../services/branches/branch.dto';\r\nimport { BranchesService } from '../../../services/branches/branches.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectService } from '../../../services/projects/project.service';\r\nimport { Project } from '../../../services/projects/project.dto';\r\n\r\n@Component({\r\n  selector: 'dd-pipelines-filter',\r\n  templateUrl: './pipelines-filter.component.html',\r\n  styleUrls: ['./pipelines-filter.component.scss']\r\n})\r\n\r\nexport class PipelinesFilterComponent implements OnInit, OnDestroy {\r\n  @Output() listBranchPipelines: EventEmitter<string> = new EventEmitter();\r\n  @Output() updateProjectId: EventEmitter<string> = new EventEmitter();\r\n  branchesOfSelectedProject: Branch[];\r\n  projects: Project[];\r\n  currentId: string;\r\n  private sub: any;\r\n\r\n  projectControl = new FormControl('', Validators.required);\r\n  branchControl = new FormControl('', Validators.required);\r\n\r\n  constructor(private branchesService: BranchesService, private router: Router, private activatedRoute: ActivatedRoute, private projectService: ProjectService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.getDashboardConfiguredProjects().subscribe(projects => {\r\n      this.projects = projects;\r\n      console.log(projects);\r\n      this.sub = this.activatedRoute.params.subscribe(params => {\r\n          this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n\r\n          if(params['projectName'] === undefined){\r\n            this.branchesService.getBranches(this.projects[0].id).subscribe(branches => {\r\n              this.branchesOfSelectedProject = branches;\r\n              this.projectControl.setValue(this.projects[0].name);\r\n              this.branchControl.setValue(this.projects[0].defaultBranch);\r\n              this.updateBranchList(this.projects[0].id);\r\n              this.currentId = this.projects[0].id;\r\n              this.selectBranch(this.projects[0].defaultBranch);\r\n            });\r\n          }\r\n          else if(params['branchName'] === undefined) {\r\n            this.branchesService.getBranches(params['projectName']).subscribe(branches => {\r\n              this.branchesOfSelectedProject = branches;\r\n              this.projectControl.setValue(this.projects.filter(element => element.id == params['projectName'])[0].name);\r\n              this.currentId = this.projects.filter(element => element.id == params['projectName'])[0].id;\r\n              this.branchControl.setValue(this.projects.filter(element => element.id == params['projectName'])[0].defaultBranch);\r\n              this.updateBranchList(params['projectName']);\r\n              this.selectBranch(this.projects.filter(element => element.id == params['projectName'])[0].defaultBranch);\r\n            });\r\n          }\r\n          else {\r\n            this.branchesService.getBranches(params['projectName']).subscribe(branches => {\r\n              this.branchesOfSelectedProject = branches;\r\n              this.projectControl.setValue(this.projects.filter(element => element.id == params['projectName'])[0].name);\r\n              this.currentId = this.projects.filter(element => element.id == params['projectName'])[0].id;\r\n              this.branchControl.setValue(this.placeSlashInBranchName(params['branchName']));\r\n              this.updateBranchList(params['projectName']);\r\n              this.selectBranch(params['branchName']);\r\n            });\r\n          }\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  updateBranchList(projectId: string){\r\n    this.updateProjectId.emit(projectId);\r\n  }\r\n\r\n  navToProj(projectId: string){\r\n    this.router.navigate(['/pipelines', projectId, this.projects.filter(element => element.id == projectId)[0].defaultBranch]).finally(() => {});\r\n  }\r\n\r\n  navToBranch(branchName: string){\r\n    this.router.navigate(['/pipelines', this.currentId , this.replaceSlashInBranchName(branchName)]).finally(() => {});\r\n  }\r\n\r\n  selectBranch(branchName: string){\r\n    branchName = this.replaceSlashInBranchName(branchName);\r\n    this.listBranchPipelines.emit(branchName);\r\n  }\r\n\r\n  private replaceSlashInBranchName(branchName: string): string {\r\n    if(branchName.includes('/')){\r\n      let branchNameSplit: string[] = branchName.split('/');\r\n      return branchNameSplit.join('22F');\r\n    }\r\n    else return branchName;\r\n  }\r\n\r\n  private placeSlashInBranchName(branchName: string): string{\r\n    if(branchName.includes('22F')){\r\n      let branchNameSplit: string[] = branchName.split('22F');\r\n      return branchNameSplit.join('/');\r\n    }\r\n    else return branchName;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    try{\r\n      this.sub.unsubscribe();\r\n    }\r\n    catch(er){}\r\n  }\r\n\r\n}\r\n","<div id=\"filterContainer\">\r\n  <mat-form-field class=\"inputField\" appearance=\"fill\">\r\n    <mat-label>ProjectId</mat-label>\r\n    <mat-select [formControl]=\"projectControl\" required>\r\n      <mat-option *ngFor=\"let project of projects\" (click)='navToProj(project.id)' [value]=\"project.name\" >\r\n        {{project.name}}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"projectControl.hasError('required')\">Wählen Sie eine ProjectID aus</mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"inputField\" appearance=\"fill\">\r\n    <mat-label>Branch</mat-label>\r\n    <mat-select [formControl]=\"branchControl\" required>\r\n      <mat-option *ngFor=\"let branch of branchesOfSelectedProject\" [value]=\"branch.name\" (click)='navToBranch(branch.name)'>\r\n        {{branch.name}}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"branchControl.hasError('required')\">Wählen Sie einen Branch aus</mat-error>\r\n  </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dd-pipelines-header',\r\n  templateUrl: './pipelines-header.component.html',\r\n  styleUrls: ['./pipelines-header.component.scss']\r\n})\r\nexport class PipelinesHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"headerContainer\">\r\n  <h1>Pipelines</h1>\r\n  <p>Hier finden sie die Übersicht über die letzten pipelines von jedem Branch der hinterlegten Projekte</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Branch } from '../../../services/branches/branch.dto';\r\n\r\n@Component({\r\n  selector: 'dd-pipelines-view',\r\n  templateUrl: './pipelines-view.component.html',\r\n  styleUrls: ['./pipelines-view.component.scss']\r\n})\r\nexport class PipelinesViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<dd-pipelines-header></dd-pipelines-header>\r\n<dd-pipeline-list></dd-pipeline-list>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport {MaterialModule} from '../shared/material.module';\r\nimport { PipelineListComponent } from './components/pipeline-list/pipeline-list.component';\r\nimport { PipelineListItemComponent } from './components/pipeline-list-item/pipeline-list-item.component';\r\nimport { PipelinesHeaderComponent } from './components/pipelines-header/pipelines-header.component';\r\nimport { PipelinesViewComponent } from './components/pipelines-view/pipelines-view.component';\r\nimport { PipelinesFilterComponent } from './components/pipelines-filter/pipelines-filter.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { H } from '@angular/cdk/keycodes';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PipelineListComponent, PipelineListItemComponent, PipelinesHeaderComponent, PipelinesViewComponent, PipelinesFilterComponent],\r\n  exports: [\r\n    PipelinesViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class PipelinesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PipelinesViewComponent } from './components/pipelines-view/pipelines-view.component';\r\n\r\n\r\nexport const PipelinesRoutes: Routes = [\r\n  {path: '', component: PipelinesViewComponent},\r\n  {path: ':projectName', component: PipelinesViewComponent},\r\n  {path: ':projectName/:branchName', component: PipelinesViewComponent}\r\n\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Branch } from './branch.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BranchesService {\r\n\r\n  constructor(private http:HttpClient) {  }\r\n\r\n  getBranches(projectId: string):Observable<Branch[]> {\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/branches/';\r\n    return this.http.get<Branch[]>(route);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Configuration } from './configuration.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\nheaders: new HttpHeaders({\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n})\r\n}\r\n\r\n@Injectable({\r\nprovidedIn: 'root'\r\n})\r\nexport class ConfigurationService {\r\n\r\n    constructor(private http:HttpClient) {  }\r\n\r\n     getConfiguration():Observable<Configuration> {\r\n        const route: string = '/gitlabcidashboard/api/configuration/';\r\n        return this.http.get<Configuration>(route);\r\n    }\r\n\r\n    saveUserConfiguration(config: Configuration): Observable<any>{\r\n      const route: string = '/gitlabcidashboard/api/configuration/';\r\n      return this.http.post<any>(route, config, httpOptions);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ResourceStringService } from '../resource-string/resource-string.service';\r\nimport { NotificationMsg } from '../notification/msg.dto';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  constructor(private resourceStrings: ResourceStringService) { }\r\n\r\n  public getErrorForErrorCode(errorCode: number): NotificationMsg {\r\n    switch (errorCode) {\r\n      case 0:\r\n        return this.resourceStrings.errors.general.unknown_error;\r\n      default:\r\n        return this.resourceStrings.errors.general.unknown_error;\r\n    }\r\n  }\r\n\r\n  public getErrorForHttpCode(httpCode: number): NotificationMsg {\r\n    switch (httpCode) {\r\n      case 401:\r\n        return this.resourceStrings.errors.general.session_expired;\r\n      case 403:\r\n        return this.resourceStrings.errors.general.session_expired;\r\n      case 404:\r\n        return this.resourceStrings.errors.general.resource_not_found;\r\n      default:\r\n        return this.resourceStrings.errors.general.unknown_error;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { PipelineSchedule } from './pipelineSchedule.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PipelineSchedulesService {\r\n\r\n  constructor(private http:HttpClient) {  }\r\n\r\n  getPipelineSchedules(projectId: string):Observable<PipelineSchedule[]> {\r\n\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/pipelineSchedules/';\r\n\r\n    return this.http.get<PipelineSchedule[]>(route);\r\n  }\r\n}\r\n","import { User } from '../users/user.dto';\r\n\r\nexport class Pipeline{\r\n  id: number;\r\n  sha: string;\r\n  ref: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  finishedAt: string;\r\n  webUrl: string;\r\n  projectName: string;\r\n  projectId: string;\r\n  category: string;\r\n}\r\n\r\nexport class PipelineTriggerUserInfo{\r\n  user: User;\r\n  startedAt: string;\r\n  duration: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Pipeline, PipelineTriggerUserInfo } from './pipeline.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PipelinesService {\r\n\r\n  constructor(private http:HttpClient) {  }\r\n\r\n  getPipelines(projectId: string):Observable<Pipeline[]> {\r\n\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/pipelines/';\r\n\r\n    return this.http.get<Pipeline[]>(route);\r\n  }\r\n\r\n  getPipeline(projectId: string, pipelineId:string):Observable<Pipeline> {\r\n\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/pipelines/'+ pipelineId;\r\n\r\n    return this.http.get<Pipeline>(route);\r\n  }\r\n\r\n  getPipelinesByBranch(projectId: string, branchName: string):Observable<Pipeline[]> {\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/pipelines/branch/' + branchName;\r\n    return this.http.get<Pipeline[]>(route);\r\n  }\r\n\r\n  getPipelineTriggerUserInfo(projectId: string, pipelineId: number):Observable<PipelineTriggerUserInfo> {\r\n    const route: string = '/gitlabcidashboard/api/' + projectId + '/pipelines/' + pipelineId + '/triggerUserInfo';\r\n    return this.http.get<PipelineTriggerUserInfo>(route);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Project } from './project.dto';\r\nimport { ConfigurationDto } from '../configuration/configuration.dto';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProjectService {\r\n\r\n  constructor(private http:HttpClient) {  }\r\n\r\n  getProjectById(projectId: string):Observable<Project> {\r\n    const route: string = '/gitlabcidashboard/api/projects/' + projectId;\r\n    return this.http.get<Project>(route);\r\n  }\r\n\r\n  getDashboardConfiguredProjects(): Observable<Project[]> {\r\n    const route: string = '/gitlabcidashboard/api/projects/dashboard/';\r\n    return this.http.get<Project[]>(route);\r\n  }\r\n\r\n  getConfigurationDto(): Observable<ConfigurationDto> {\r\n    const route: string = '/gitlabcidashboard/api/projects/configurationDto';\r\n    return this.http.get<ConfigurationDto>(route);\r\n  }\r\n\r\n  getAllRelevantProjects(): Observable<Project[]> {\r\n    const route: string = '/gitlabcidashboard/api/projects/relevant';\r\n    return this.http.get<Project[]>(route);\r\n  }\r\n\r\n  saveNewConfiguration(configurationDto: ConfigurationDto): Observable<any>{\r\n    const route: string = '/gitlabcidashboard/api/projects/';\r\n    return this.http.post<any>(route, configurationDto, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResourceStringService {\r\n\r\n  constructor() { }\r\n\r\n  public dialogs = {\r\n    dismiss_changes: {\r\n      title: $localize`:Dialog Titel@@rsDialogDismissChangesTitle:Ungespeicherte Daten`,\r\n      details: $localize`:Dialog Langtext@@rsDialogDismissChangesDetails:Einige Änderungen wurden noch nicht gespeichert. Möchte Sie die Seite trotzdem verlassen?`,\r\n      acceptButtonText: $localize`:Dialog Accept-Button@@rsDialogDismissChangesAccept:Seite verlassen`,\r\n      closeButtonText: $localize`:Dialog Abort-Button@@rsDialogDismissChangesClose:Auf Seite bleiben`,\r\n    }\r\n  };\r\n\r\n  public errors = {\r\n\r\n    general: {\r\n      unknown_error: {\r\n        title: $localize`:Fehlermeldung Überschrift@@errorGeneralUnknownErrorTitle:Unbekannter Fehler`,\r\n        details: $localize`:Fehlermeldung Langtext@@errorGeneralUnknownErrorDetails:Es ist ein unbekannter Fehler aufgetreten`\r\n      },\r\n      session_expired: {\r\n        title: $localize`:Fehlermeldung Überschrift@@errorGeneralSessionExpiredTitle:Sitzung abgelaufen`,\r\n        details: $localize`:Fehlermeldung Langtext@@errorGeneralSessionExpiredDetails:Ihre aktuelle Sitzung ist abgelaufen. Laden Sie die Seite neu, um sich erneut anzumelden.`\r\n      },\r\n      resource_not_found: {\r\n        title: $localize`:Fehlermeldung Überschrift@@errorGeneralResourceNotFoundTitle:Die Seite existiert nicht`,\r\n        details: $localize`:Fehlermeldung Langtext@@errorGeneralResourceNotFoundDetails:Die angegebene URL funktioniert nicht mehr.`\r\n      }\r\n    }\r\n\r\n  };\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Project } from '../../services/projects/project.dto';\r\nimport { ProjectService } from '../../services/projects/project.service';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'dd-settings-dashboard-page',\r\n  templateUrl: './settings-dashboard-page.component.html',\r\n  styleUrls: ['./settings-dashboard-page.component.scss']\r\n})\r\nexport class SettingsDashboardPageComponent implements OnInit {\r\n  allProjects: Project[];\r\n  @Input() appliedNow: Project[];\r\n  @Output() applyNewDashboardProjectsConfig: EventEmitter<Project[]> = new EventEmitter();\r\n  availableProjects: Project[];\r\n  newConfig: Project[];\r\n  projectControl = new FormControl('', Validators.required);\r\n  filteredProjects: Observable<Project[]>;\r\n\r\n\r\n  constructor(private projectService: ProjectService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.getAllRelevantProjects().subscribe(projects => {\r\n      console.log(projects);\r\n      this.allProjects = projects;\r\n      this.availableProjects = new Array();\r\n      this.newConfig = new Array();\r\n\r\n      this.allProjects.forEach(element => this.availableProjects.push(element));\r\n      this.appliedNow.forEach(element => {\r\n        this.newConfig.push(element);\r\n        this.availableProjects = this.availableProjects.filter(proj => proj.id !== element.id);\r\n      });\r\n      console.log(this.availableProjects);\r\n      console.log(this.appliedNow);\r\n      this.filteredProjects = this.projectControl.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => this._filter(value))\r\n      );\r\n    });\r\n  }\r\n\r\n  private _filter(value: string): Project[]{\r\n    const filterValue = value.toLowerCase();\r\n    return this.availableProjects.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onAddToDashboard(project : Project){\r\n    this.newConfig.push(project);\r\n    this.availableProjects = this.availableProjects.filter(element =>\r\n      element.id !== project.id\r\n    );\r\n    console.log(\"new dashboard config applied\");\r\n    console.log(this.newConfig)\r\n    this.applyNewDashboardProjectsConfig.emit(this.newConfig);\r\n  }\r\n\r\n  onRemoveFromDashboard(project: Project){\r\n    this.newConfig = this.newConfig.filter(element =>\r\n        element.id !== project.id\r\n    );\r\n    this.availableProjects.push(project);\r\n    this.applyNewDashboardProjectsConfig.emit(this.newConfig);\r\n  }\r\n\r\n  getColor(): ThemePalette{\r\n    return \"accent\";\r\n  }\r\n\r\n  onRestore(){\r\n    this.newConfig = this.appliedNow;\r\n  }\r\n}\r\n","<mat-expansion-panel expanded>\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      Dashboard\r\n    </mat-panel-title>\r\n    <mat-panel-description>\r\n      Projects\r\n    </mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n  <ng-template matExpansionPanelContent>\r\n  <h3>Projects viewed on dashboard</h3>\r\n  <p>Here you can add projects to dashboard and remove them</p>\r\n    <mat-form-field aria-label=\"Projects available selection\" id=\"availableProjectInputField\">\r\n      <mat-label>Available Projects</mat-label>\r\n\r\n      <input type=\"text\" matInput [formControl]=\"projectControl\" [matAutocomplete]=\"auto\" >\r\n      <mat-autocomplete #auto=\"matAutocomplete\" autoActiveFirstOption>\r\n        <mat-option *ngFor=\"let project of filteredProjects | async\" (click)=\"onAddToDashboard(project)\" [value]=\"project.name\">\r\n              {{project.name}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n\r\n    <p>Selected Projects:</p>\r\n    <mat-list aria-label=\"Projects new selection\" id=\"dashboardProjectList\">\r\n      <button class=\"projectBtn\" mat-stroked-button *ngFor=\"let project of newConfig\">\r\n        {{project.name}}\r\n        <mat-icon class=\"deleteIcon\" (click)=\"onRemoveFromDashboard(project)\">delete_outline</mat-icon>\r\n      </button>\r\n    </mat-list>\r\n\r\n    <mat-action-list>\r\n      <button mat-button (click)=\"onRestore()\" id=\"restoreBtn\" id=\"restoreButton\">Restore last configuration</button>\r\n    </mat-action-list>\r\n  </ng-template>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Configuration, ConfigurationDto } from '../../services/configuration/configuration.dto';\r\nimport { ConfigurationService } from '../../services/configuration/configuration.service';\r\nimport { ProjectService } from '../../services/projects/project.service';\r\nimport { Project } from '../../services/projects/project.dto';\r\nimport { LoadingState } from 'src/app/shared/classes/loading-state';\r\nimport { NotificationMsg } from '../../services/notification/msg.dto';\r\n\r\n@Component({\r\n  selector: 'dd-settings-overview-page',\r\n  templateUrl: './settings-overview-page.component.html',\r\n  styleUrls: ['./settings-overview-page.component.scss']\r\n})\r\nexport class SettingsOverviewPageComponent implements OnInit {\r\n\r\n  public LoadingState = LoadingState;\r\n  public loadingState = LoadingState.Loading;\r\n  public loadingError: NotificationMsg;\r\n\r\n  configurationDto: ConfigurationDto;\r\n\r\n  constructor(private projectService: ProjectService, private configService: ConfigurationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.getConfigurationDto().subscribe(config => {\r\n      this.configurationDto = config;\r\n      this.loadingState = LoadingState.Finished;\r\n      console.log(this.configurationDto);\r\n    });\r\n  }\r\n\r\n  applyNewDashboardProjectsConfig(projects: Project[]){\r\n    this.configurationDto.dashboardProjects = projects;\r\n  }\r\n\r\n  saveConfig(){\r\n    this.projectService.saveNewConfiguration(this.configurationDto).subscribe();\r\n  }\r\n\r\n}\r\n","<ng-container [ngSwitch]=\"loadingState\">\r\n  <div *ngSwitchCase=\"LoadingState.Finished\" id=\"configurationContainer\">\r\n\r\n    <div id=\"headerConfigPage\">\r\n      <h1>Settings</h1>\r\n      <p>Here you can customize projects on your dashboard  </p>\r\n    </div>\r\n\r\n    <mat-accordion>\r\n      <dd-settings-dashboard-page (applyNewDashboardProjectsConfig)=\"applyNewDashboardProjectsConfig($event)\" [appliedNow]=\"configurationDto.dashboardProjects\"></dd-settings-dashboard-page>\r\n      <button mat-raised-button id=\"saveBtn\" (click)=\"saveConfig()\">Save</button>\r\n    </mat-accordion>\r\n  </div>\r\n\r\n  <dd-progress-indicator *ngSwitchCase=\"LoadingState.Loading\" [restrictedWidth]=\"true\" text=\"Aktivitäten werden geladen\" class=\"center-content\" i18n-text=\"Ladebalkentext@@activitiesViewerLoading\"></dd-progress-indicator>\r\n\r\n  <div *ngSwitchCase=\"LoadingState.Error\" class=\"center-content  center-content__childs\">\r\n    <p class=\"mat-title\">{{loadingError.title}}</p>\r\n    <p class=\"mat-subheading-2\">{{loadingError.details}}</p>\r\n  </div>\r\n</ng-container>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SettingsOverviewPageComponent } from './settings-overview-page/settings-overview-page.component';\r\nimport { SettingsDashboardPageComponent } from './settings-dashboard-page/settings-dashboard-page.component';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SettingsOverviewPageComponent, SettingsDashboardPageComponent],\r\n  exports:[\r\n    SettingsOverviewPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatExpansionModule,\r\n    MatAutocompleteModule,\r\n    ScrollingModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { SettingsOverviewPageComponent } from './settings-overview-page/settings-overview-page.component';\r\n\r\nexport const SettingsRoutes: Routes = [\r\n  {path: '', component: SettingsOverviewPageComponent}\r\n];\r\n","export enum LoadingState {\r\n  Loading,\r\n  Finished,\r\n  Error\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'dd-loading-screen',\r\n  template: `\r\n    <p mat-dialog-title i18n=\"Text in der Ladeanzeige@@loadingScreenText\" data-selenium-id=\"loadingScreen\">Bitte warten</p>\r\n    <mat-dialog-content>\r\n      <p class=\"text\" *ngIf=\"data.text\">{{data.text}}</p>\r\n      <mat-progress-bar [mode]=\"determinate ? 'determinate' : 'indeterminate'\" [value]=\"determinate ? Progress : undefined \"></mat-progress-bar>\r\n      <div class=\"progress\" *ngIf=\"determinate\" i18n=\"Fortschrittsanzeige@@loadingScreenProgress\">Fortschritt: {{Progress | number:\"1.0-0\"}}%</div>\r\n    </mat-dialog-content>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n      width: 15em;\r\n    }\r\n\r\n    .text {\r\n      margin-top: 0;\r\n    }\r\n\r\n    .progress {\r\n      margin-top: 0.5em;\r\n    }\r\n  `]\r\n})\r\nexport class LoadingScreenComponent {\r\n\r\n  public set Progress(value: number) {\r\n    if ((!value && value !== 0) || value < 0 || value > 100) {\r\n      this.progress = undefined;\r\n    } else {\r\n      this.progress = value;\r\n    }\r\n  }\r\n\r\n  public get Progress(): number {\r\n    return this.progress;\r\n  }\r\n\r\n  public get determinate(): boolean {\r\n    return !!this.progress || this.progress === 0;\r\n  }\r\n\r\n  private progress: number;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {text: string}) {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <!-- resource-string.service.ts -->\r\n    <span i18n=\"Dialog Titel@@rsDialogDismissChangesTitle\">Ungespeicherte Daten</span>\r\n    <span i18n=\"Dialog Langtext@@rsDialogDismissChangesDetails\">Einige Änderungen wurden noch nicht gespeichert. Möchte Sie die Seite trotzdem verlassen?</span>\r\n    <span i18n=\"Dialog Accept-Button@@rsDialogDismissChangesAccept\">Seite verlassen</span>\r\n    <span i18n=\"Dialog Abort-Button@@rsDialogDismissChangesClose\">Auf Seite bleiben</span>\r\n    <span i18n=\"Fehlermeldung Überschrift@@errorGeneralUnknownErrorTitle\">Unbekannter Fehler</span>\r\n    <span i18n=\"Fehlermeldung Langtext@@errorGeneralUnknownErrorDetails\">Es ist ein unbekannter Fehler aufgetreten</span>\r\n    <span i18n=\"Fehlermeldung Überschrift@@errorGeneralSessionExpiredTitle\">Sitzung abgelaufen</span>\r\n    <span i18n=\"Fehlermeldung Langtext@@errorGeneralSessionExpiredDetails\">Ihre aktuelle Sitzung ist abgelaufen. Laden Sie die Seite neu, um sich erneut anzumelden.</span>\r\n    <span i18n=\"Fehlermeldung Überschrift@@errorGeneralResourceNotFoundTitle\">Die Seite existiert nicht</span>\r\n    <span i18n=\"Fehlermeldung Langtext@@errorGeneralResourceNotFoundDetails\">Die angegebene URL funktioniert nicht mehr.</span>\r\n\r\n    <!-- dummy.component.ts -->\r\n    <span i18n=\"Eine Beschreibung@@idTextCode\">Ein Text mit Übersetzung im Code</span>\r\n  `\r\n})\r\nexport class LocalizeComponent {\r\n  // Diese Komponente ist nur ein Dummy, bis Angular die Extraktion von Übersetzungen aus TypeScript unterstützt\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { NotificationMsg } from '../../services/notification/msg.dto';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'dd-msg-dialog',\r\n  template: `\r\n    <span mat-dialog-title>{{title}}</span>\r\n    <mat-dialog-content>\r\n      {{details}}\r\n      <ng-container *ngIf=\"metaDisplay\">\r\n        <div class=\"meta\" [innerHTML]=\"metaDisplay\"></div>\r\n      </ng-container>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n      <button mat-button mat-dialog-close=\"close\" *ngIf=\"closeButtonText\" data-selenium-id=\"buttonClose\">{{closeButtonText}}</button>\r\n      <button mat-button mat-dialog-close=\"accept\" *ngIf=\"acceptButtonText\" data-selenium-id=\"buttonAccept\">{{acceptButtonText}}</button>\r\n    </mat-dialog-actions>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: block;\r\n      max-width: 30vw;\r\n    }\r\n\r\n    .meta {\r\n      margin-top: 1em;\r\n    }\r\n\r\n    mat-dialog-actions {\r\n      justify-content: flex-end;\r\n    }\r\n  `]\r\n})\r\nexport class MsgDialogComponent {\r\n\r\n  title: string;\r\n  details: string;\r\n  metaDisplay: string;\r\n  closeButtonText: string;\r\n  acceptButtonText: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<MsgDialogComponent>, @Inject(MAT_DIALOG_DATA) data: NotificationMsg) {\r\n    this.title = data.title;\r\n    this.details = data.details;\r\n    this.metaDisplay = data.metaDisplay;\r\n    this.closeButtonText = data.closeButtonText ?? 'OK';\r\n    this.acceptButtonText = data.acceptButtonText;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dd-progress-indicator',\r\n  template: `\r\n    <div class=\"progress-indicator\" [ngClass]=\"{'restricted-width': restrictedWidth}\">\r\n      <div class=\"mat-subheading-1 progress-indicator_text\">{{text}}</div>\r\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./progress-indicator.component.scss']\r\n})\r\nexport class ProgressIndicatorComponent implements OnInit {\r\n\r\n  defaultText = $localize`:Standardtext für Ladebalken@@progressIndicatorDefaultText:Daten werden geladen`;\r\n  @Input() text = this.defaultText;\r\n  @Input() restrictedWidth: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatProgressBarModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatSelectModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatProgressBarModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './material.module';\r\nimport { LocalizeComponent } from './components/localize.component';\r\nimport { LoadingScreenComponent } from './components/loading-screen.component';\r\nimport { MsgDialogComponent } from './components/msg-dialog.component';\r\nimport { ProgressIndicatorComponent } from './components/progress-indicator/progress-indicator.component';\r\n\r\n@NgModule({\r\n  declarations: [LocalizeComponent, LoadingScreenComponent, MsgDialogComponent, ProgressIndicatorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    LocalizeComponent,\r\n    ProgressIndicatorComponent\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}